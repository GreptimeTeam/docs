- Getting-Started:
  - overview
  - Installation:
    - overview
    - greptimedb-standalone
    - greptimedb-cluster
    - greptimedb-dashboard
  - Quick-Start:
    - overview
    - mysql
    - influxdb
    - go
    - java
    - python
    - node
    - vector
    - prometheus
- User-Guide:
  - overview
  - Concepts:
    - overview
    - why-greptimedb
    - data-model
    - architecture
    - storage-location
    - key-concepts
    - features-that-you-concern
  - Clients:
    - overview
    - authentication
    - mysql
    - prometheus
    - influxdb-line
    - opentsdb
    - postgresql
    - http-api
    - otlp
    - vector
    - grafana
    - emqx
  - Migrate-to-GreptimeDB:
    - migrate-from-influxdb
  - table-management
  - Write-Data:
    - overview
    - prometheus
    - sql
    - influxdb-line
    - opentsdb
  - Query-Data:
    - overview
    - sql
    - promql
  - query-external-data
  - Client-Libraries:
    - overview
    - go
    - java
  - Python-Scripts:
    - overview
    - getting-started
    - define-function
    - query-data
    - write-data
    - data-types
    - api
  - cluster
  - Operations:
    # - overview
    - configuration
    - kubernetes
    - gtctl
    - run-on-android
    - monitoring
    - tracing
    - Remote-WAL:
      - quick-start
      - cluster-deployment
    - region-migration
    # TODO
    # - alert
    # - import-data
    # - export-data
    # - back-up-&-restore-data
    # - capacity-planning
  - upgrade
- GreptimeCloud:
  - overview
  - Getting-Started:
    - overview
    - prometheus
    - mysql
    - influxdb
    - go
    - java
    - python
    - node
    - vector
  - Integrations:
    - Prometheus:
      - quick-setup
      - rule-management
    - grafana
    - mysql
    - postgresql
    - influxdb
    - otlp
    - vector
    - emqx
    - streamlit
    - mindsdb
    - SDK-Libraries:
      - go
      - java
  - Usage-&-Billing:
    - overview
    - request-capacity-unit
    - hobby
    - serverless
    - dedicated
    - byoc
    - billing
  - Tutorials:
    - Monitor-Host-Metrics:
      - prometheus
      - mysql
      - influxdb
      - go
      - java
      - python
      - node-js
- Reference:
  - command-lines
  - SQL:
    - overview
    - data-types
    - http-api
    - insert
    - cast
    - copy
    - select
    - distinct
    - where
    - order_by
    - group_by
    - limit
    - join
    - functions
    - range
    - delete
    - show
    - tql
    - create
    - describe_table
    - alter
    - explain
    - compatibility
    - Information-Schema:
      - overview
      - build-info
      - character-sets
      - collations
      - collation-character-set-applicability
      - columns
      - engines
      - key-column-usage
      - partitions
      - schemata
      - tables
      # - table-constraints
      - greptime-region-peers
      - runtime-metrics
  - Telemetry
- Contributor-Guide:
  - overview
  - getting-started
  - Frontend:
    - overview
    - table-sharding
    - distributed-querying
  - Datanode:
    - overview
    - storage-engine
    - query-engine
    - data-persistence-indexing
    - wal
    - python-scripts
    - metric-engine
  - Metasrv:
    - overview
    - admin-api
    - dist-lock
    - selector
  - Tests:
    - overview
    - unit-test
    - integration-test
    - sqlness-test
  - Benchmarks:
    - nyc-taxi
  - How-To:
    - how-to-write-sdk
    - how-to-use-tokio-console
    - how-to-trace-greptimedb
- Release-Notes:
  - all-releases
  - release-0-7-2
  - release-0-7-1
  - release-0-7-0
- FAQ-and-Others:
  - overview
  - faq
